#pragma once

#include <iostream>
#include <windows.h>
#include <stdio.h>
#include <stdint.h>
#include <string>
#include <SetupAPI.h>
#include <cfgmgr32.h>
#include <objbase.h>
#include <ks.h>
#include <Dshow.h>
#include <ksproxy.h>

#define MSKSSRV_IOCTL_INIT_CONTEXT 0x2f0400
#define MSKSSRV_IOCTL_INIT_STREAM 0x2f0404
#define MSKSSRV_IOCTL_REGISTER_STREAM 0x2F0420
#define MSKSSRV_IOCTL_PUBLISHTX 0x2f0408
#define MSKSSRV_IOCTL_CONSUMETX 0x2f0410

#define STATUS_INFO_LENGTH_MISMATCH 0xc0000004
#define ObjectThreadType 0x08

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO
{
	USHORT UniqueProcessId;
	USHORT CreatorBackTraceIndex;
	UCHAR ObjectTypeIndex;
	UCHAR HandleAttributes;
	USHORT HandleValue;
	PVOID Object;
	ULONG GrantedAccess;
} SYSTEM_HANDLE_TABLE_ENTRY_INFO, * PSYSTEM_HANDLE_TABLE_ENTRY_INFO;

typedef struct _SYSTEM_HANDLE_INFORMATION
{
	ULONG NumberOfHandles;
	SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
} SYSTEM_HANDLE_INFORMATION, * PSYSTEM_HANDLE_INFORMATION;

typedef enum _SYSTEM_INFORMATION_CLASS {
	SystemHandleInformation = 16
} SYSTEM_INFORMATION_CLASS;


typedef NTSTATUS(WINAPI* _NtQuerySystemInformation)(
	SYSTEM_INFORMATION_CLASS SystemInformationClass,
	PVOID SystemInformation,
	ULONG SystemInformationLength,
	PULONG ReturnLength
	);